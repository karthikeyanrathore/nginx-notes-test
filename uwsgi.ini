[uwsgi]
; https://www.bloomberg.com/company/stories/configuring-uwsgi-production-deployment/
; some configuration inspired from https://github.com/GeoNode/geonode/blob/master/uwsgi.ini

# Operational MODE: preforking

strict = true
master = true ; pre-fork mode: https://uwsgi-docs.readthedocs.io/en/latest/articles/TheArtOfGracefulReloading.html#preforking-vs-lazy-apps-vs-lazy
vacuum = true
single-interpreter = true ; If you are running only a single application you can disable multiple interpreters.
die-on-term = true
need-app = true

module = wsgi:application
http-socket = 0.0.0.0:8000
protocol = http

buffer-size = 32768

; manage workers
; configuration will restart worker process after
; 1. 1000 requests has been handled
; 2. 1 hr has passed.
; 3. the worker has allocated 2GB of memory.
max-requests = 1000                  ; Restart workers after this many requests
max-worker-lifetime = 3600           ; Restart workers after this many seconds
reload-on-rss = 2048                 ; Restart workers after this much resident memory (2.048 gb)
worker-reload-mercy = 60             ; How long to wait before forcefully killing workers

cheaper-algo = busyness              
workers = 5                          ; Maximum number of workers allowed
cheaper = 1                          ; Minimum number of workers allowed
cheaper-initial = 5                  ; Workers created at startup

harakiri = 60                        ; Forcefully kill workers after 60 seconds (if worker is stuck forever, kill it.)

enable-threads = true

auto-procname = true                 ; Identify the workers

;disable-logging = true                 ; By default, uWSGI has rather verbose logging. Ensure that your
;log-4xx = true                         ; application emits concise and meaningful logs. Uncomment these lines
;log-5xx = true                         ; if you want to disable logging